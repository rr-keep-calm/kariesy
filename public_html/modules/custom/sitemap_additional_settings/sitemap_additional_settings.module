<?php

use Drupal\Core\Routing\RouteMatch;
use Drupal\menu_link_content\Entity\MenuLinkContent;
use Drupal\node\NodeInterface;
use Symfony\Cmf\Component\Routing\RouteObjectInterface;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Route;

function sitemap_additional_settings_node_insert(NodeInterface $node) {
  if (!validateNodeType($node)) {
    return;
  }
  if ($node->get('status')->getValue()[0]['value']) {
    $alias = \Drupal::service('path.alias_manager')
      ->getAliasByPath('/node/' . $node->id());
    menuModify($alias, TRUE, $node->label());
  }
}

function sitemap_additional_settings_node_presave(NodeInterface $node) {
  if (!validateNodeType($node)) {
    return;
  }
  $url_presave = \Drupal::service('path.alias_manager')
    ->getAliasByPath('/node/' . $node->id());
  \Drupal::state()
    ->set('sitemap_additional_settings.url_presave', $url_presave);
}

function sitemap_additional_settings_node_update(NodeInterface $node) {
  if (!validateNodeType($node)) {
    return;
  }
  $status = $node->get('status')->getValue()[0]['value'];
  $alias = \Drupal::service('path.alias_manager')
    ->getAliasByPath('/node/' . $node->id());
  $url_presave = \Drupal::state()
    ->get('sitemap_additional_settings.url_presave', '');
  if ($alias != $url_presave) {
    menuModify($url_presave, FALSE);
    menuModify($alias, (bool)$status, $node->label());
  }
  if (!$status) {
    menuModify($alias, FALSE);
  }
}

function sitemap_additional_settings_node_predelete(NodeInterface $node) {
  if (!validateNodeType($node)) {
    return;
  }
  $alias = \Drupal::service('path.alias_manager')
    ->getAliasByPath('/node/' . $node->id());
  menuModify($alias, FALSE);
}

function menuModify($alias, $add, $name = '') {
  $config = \Drupal::config('sitemap_additional.adminsettings');
  $host = \Drupal::request()->getSchemeAndHttpHost();
  $mids = getLinkFromMenu($alias);

  if (!$mids && $add) {
    $request = Request::create($alias);
    $route_object = new Route($alias);
    $route_object->setDefault('sitemap_additional_settings', TRUE);
    $request->attributes->set(RouteObjectInterface::ROUTE_OBJECT, $route_object);
    $request->attributes->set(RouteObjectInterface::ROUTE_NAME, 'entity.node.canonical');
    $request->attributes->set('sitemap_additional_settings', TRUE);
    $route = RouteMatch::createFromRequest($request);
    $breadcrumbHandler = \Drupal::service('breadcrumb');
    $breadcrumbs = $breadcrumbHandler->build($route);
    $menu_link = [
      'title' => $name,
      'link' => ['uri' => $host . $alias],
      'menu_name' => $config->get('menu_for_auto_add'),
      'expanded' => TRUE,
    ];

    $parent_alias = '';
    if ($breadcrumbs->getLinks()) {
      $parent_alias = end($breadcrumbs->getLinks())->getUrl()->toString();
    }
    if ($parent_alias) {
      $parent_mids = getLinkFromMenu($parent_alias);
      if ($parent_mids) {
        $parent_link = MenuLinkContent::load(reset($parent_mids));
        if ($parent_link) {
          $menu_link['parent'] = $parent_link->getPluginId();
        }
      }
    }
    $menu_link_content = MenuLinkContent::create($menu_link);
    $menu_link_content->save();
  }
  if ($mids && !$add) {
    $controller = \Drupal::entityTypeManager()->getStorage('menu_link_content');
    $entities = $controller->loadMultiple($mids);
    $controller->delete($entities);
  }
  $cache = \Drupal::cache('menu');
  $cache->deleteAll();
  drupal_flush_all_caches();
}

function getLinkFromMenu($alias) {
  $config = \Drupal::config('sitemap_additional.adminsettings');
  $host = \Drupal::request()->getSchemeAndHttpHost();
  return \Drupal::entityQuery('menu_link_content')
    ->condition('menu_name', $config->get('menu_for_auto_add'))
    ->condition('link__uri', $host . $alias)
    ->execute();
}

function validateNodeType($node) {
  $config = \Drupal::config('sitemap_additional.adminsettings');
  $exclude_node_types = array_filter($config->get('exclude_node_types'));
  $node_type = $node->bundle();
  return !isset($exclude_node_types[$node_type]);
}
